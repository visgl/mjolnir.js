"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[14],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>y});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),g=i,y=u["".concat(p,".").concat(g)]||u[g]||m[g]||o;return t?r.createElement(y,a(a({ref:n},s),{},{components:t})):r.createElement(y,a({ref:n},s))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(8168),i=(t(6540),t(5680));const o={},a="Swipe",l={unversionedId:"api-reference/swipe",id:"api-reference/swipe",title:"Swipe",description:"Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.",source:"@site/../docs/api-reference/swipe.md",sourceDirName:"api-reference",slug:"/api-reference/swipe",permalink:"/mjolnir.js/docs/api-reference/swipe",draft:!1,editUrl:"https://github.com/visgl/mjolnir.js/tree/master/website/../docs/api-reference/swipe.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Rotate",permalink:"/mjolnir.js/docs/api-reference/rotate"},next:{title:"Tap",permalink:"/mjolnir.js/docs/api-reference/tap"}},p={},c=[{value:"Constructor",id:"constructor",level:2},{value:"Events",id:"events",level:2},{value:"Source",id:"source",level:2}],s={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"swipe"},"Swipe"),(0,i.yg)("p",null,"Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction."),(0,i.yg)("h2",{id:"constructor"},"Constructor"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"import {EventManager, InputDirection, Swipe} from 'mjolnir.js';\n\nconst eventManager = new EventManager({\n  // ...\n  recognizers: [\n    new Swipe({direction: InputDirection.Horizontal})\n  ]\n});\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"options")," (object, optional) - Options",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"event")," (string) -\tName of the event. Default ",(0,i.yg)("inlineCode",{parentName:"li"},"'swipe'"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"pointers")," (number) - Required pointers. Default ",(0,i.yg)("inlineCode",{parentName:"li"},"1"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"threshold")," (number) - Minimal distance required before recognizing. Default ",(0,i.yg)("inlineCode",{parentName:"li"},"10"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"direction")," {InputDirection} - Direction of the panning. Default ",(0,i.yg)("inlineCode",{parentName:"li"},"InputDirection.All"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"velocity")," (number) - Minimal velocity required before recognizing, unit is in px per ms. Default ",(0,i.yg)("inlineCode",{parentName:"li"},"0.3"),".")))),(0,i.yg)("h2",{id:"events"},"Events"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"swipe, together with all of below"),(0,i.yg)("li",{parentName:"ul"},"swipeleft"),(0,i.yg)("li",{parentName:"ul"},"swiperight"),(0,i.yg)("li",{parentName:"ul"},"swipeup"),(0,i.yg)("li",{parentName:"ul"},"swipedown")),(0,i.yg)("h2",{id:"source"},"Source"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/visgl/mjolnir.js/blob/master/src/hammerjs/recognizers/swipe.ts"},"https://github.com/visgl/mjolnir.js/blob/master/src/hammerjs/recognizers/swipe.ts")))}m.isMDXComponent=!0}}]);