"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[424],{1702:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(4848),s=r(8453);const i={},o="Overview",l={id:"README",title:"Overview",description:"mjolnir.js is a JavaScript event and gesture handling module. It is built on top of and named in homage of the classic hammer.js library.",source:"@site/../docs/README.md",sourceDirName:".",slug:"/",permalink:"/mjolnir.js/docs/",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/mjolnir.js/tree/master/docs/../docs/README.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",next:{title:"What's New",permalink:"/mjolnir.js/docs/whats-new"}},a={},d=[{value:"Features",id:"features",level:2},{value:"Platforms supported",id:"platforms-supported",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,n.jsxs)(t.p,{children:["mjolnir.js is a JavaScript event and gesture handling module. It is built on top of and named ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Mj%C3%B6lnir",children:"in homage"})," of the classic ",(0,n.jsx)(t.a,{href:"http://hammerjs.github.io/",children:"hammer.js"})," library."]}),"\n",(0,n.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,n.jsx)(t.p,{children:"On top of the pointer gestures that Hammer.js offers, mjolnir.js adds support for the following events:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Right mouse button Gestures"}),"\n",(0,n.jsxs)(t.li,{children:["Generic mouse events such as ",(0,n.jsx)(t.code,{children:"pointermove"}),", ",(0,n.jsx)(t.code,{children:"pointerover"}),", ",(0,n.jsx)(t.code,{children:"pointerout"}),", and ",(0,n.jsx)(t.code,{children:"pointerleave"})," without requiring button down"]}),"\n",(0,n.jsx)(t.li,{children:"Mouse wheel events"}),"\n",(0,n.jsx)(t.li,{children:"Keyboard events"}),"\n",(0,n.jsxs)(t.li,{children:["Event propagation without firing ",(0,n.jsx)(t.a,{href:"http://hammerjs.github.io/api/#domevents-false",children:"DOM events"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"platforms-supported",children:"Platforms supported"}),"\n",(0,n.jsx)(t.p,{children:"The primary focus is to support so called evergreen browsers as well as mobile browsers, but PRs for older browser will generally be accepted."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>l});var n=r(6540);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);